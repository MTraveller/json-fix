[
    (
        kind: "TrailingCommaInArray",
        scope: "arrays_trailing_comma",
        step: "ArraysTrailingCommaFixed",
        label: "Trailing comma in array",
    ),
    (
        kind: "LeadingCommaInArray",
        scope: "arrays_leading_comma",
        step: "ArraysLeadingCommaFixed",
        label: "Leading comma in array",
    ),
    (
        kind: "EmptyArraySlot",
        scope: "arrays_empty_slots",
        step: "ArraysEmptySlotsFilled",
        label: "Empty slots in array",
    ),
    (
        kind: "ArrayStructureMalformed",
        scope: "arrays_structure",
        step: "ArraysStructureCorrected",
        label: "Malformed array structure",
    ),
    (
        kind: "DoubleComma",
        scope: "comma_double",
        step: "CommaDoubleRemoved",
        label: "Double comma detected",
    ),
    (
        kind: "MisalignedComma",
        scope: "comma_misalignment",
        step: "CommaMisalignmentFixed",
        label: "Misaligned comma in key-value",
    ),
    (
        kind: "OrphanedValue",
        scope: "comma_orphaned_value",
        step: "CommaOrphanedValueHandled",
        label: "Orphaned value with comma",
    ),
    (
        kind: "CommaChain",
        scope: "comma_chained_value",
        step: "CommaChainedValueFixed",
        label: "Comma-chained value",
    ),
    (
        kind: "StrayComma",
        scope: "comma_stray",
        step: "CommaStrayRemoved",
        label: "Stray comma removed",
    ),
    (
        kind: "MissingComma",
        scope: "comma_missing",
        step: "CommaMissingAdded",
        label: "Missing comma between items",
    ),
    (
        kind: "MissingColon",
        scope: "colon_missing",
        step: "ColonMissingFixed",
        label: "Missing colon between key and value",
    ),
    (
        kind: "ColonMisuse",
        scope: "colon_misuse",
        step: "ColonMisuseFixed",
        label: "Colon used incorrectly",
    ),
    (
        kind: "SingleQuotes",
        scope: "quotes_single",
        step: "QuotesSingleConverted",
        label: "Single quotes used instead of double",
    ),
    (
        kind: "CurlyQuotes",
        scope: "quotes_curly",
        step: "QuotesCurlyNormalized",
        label: "Curly quotes found",
    ),
    (
        kind: "UnbalancedBracket",
        scope: "brackets_balanced",
        step: "BracketsBalanced",
        label: "Unbalanced brackets",
    ),
    (
        kind: "ExtraBracket",
        scope: "brackets_extra",
        step: "BracketsExtraRemoved",
        label: "Extra bracket present",
    ),
    (
        kind: "MissingBracket",
        scope: "brackets_missing",
        step: "BracketsMissingAdded",
        label: "Missing bracket in structure",
    ),
    (
        kind: "InvalidEscape",
        scope: "escape_invalid",
        step: "EscapeInvalidRemoved",
        label: "Invalid escape sequence",
    ),
    (
        kind: "BrokenUnicodeEscape",
        scope: "escape_unicode",
        step: "EscapeUnicodeRepaired",
        label: "Broken unicode escape sequence",
    ),
    (
        kind: "UnquotedKey",
        scope: "keys_unquoted",
        step: "KeysUnquotedFixed",
        label: "Unquoted key detected",
    ),
    (
        kind: "KeyTrap",
        scope: "keys_trap",
        step: "KeysTrapResolved",
        label: "Key trap detected",
    ),
    (
        kind: "MarkdownWrapper",
        scope: "markdown_wrapper",
        step: "MarkdownWrapperRemoved",
        label: "Markdown wrapper detected",
    ),
    (
        kind: "MarkdownJsonExtract",
        scope: "markdown_extract",
        step: "MarkdownJsonExtracted",
        label: "JSON extracted from markdown",
    ),
    (
        kind: "NullSlots",
        scope: "misc_null_slots",
        step: "MiscNullSlotsFilled",
        label: "Null or empty slots detected",
    ),
    (
        kind: "Fallback",
        scope: "misc_fallback",
        step: "MiscFallbackApplied",
        label: "Fallback fixer applied",
    ),
    (
        kind: "ConcatenatedStructure",
        scope: "structure_concatenated",
        step: "StructureConcatenatedSplit",
        label: "Concatenated JSON structures",
    ),
    (
        kind: "OrphanedBrace",
        scope: "structure_orphaned_brace",
        step: "StructureOrphanedBraceResolved",
        label: "Orphaned brace found",
    ),
    (
        kind: "JsUndefined",
        scope: "js_undefined",
        step: "JsUndefinedReplaced",
        label: "Undefined (JS) found",
    ),
    (
        kind: "JsNaN",
        scope: "js_nan",
        step: "JsNaNReplaced",
        label: "NaN or Infinity found (JS)",
    ),
    (
        kind: "JsComment",
        scope: "js_comments",
        step: "JsCommentsRemoved",
        label: "JS-style comment found",
    ),
]