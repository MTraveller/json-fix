[
    (
        key: "ARRAY_EMPTYSLOT",
        kind: Some("Array"),
        subkind: Some("EmptySlot"),
        step: Some("ArrayEmptySlotsFilled"),
        label: Some("Array empty slots filled"),
        category: Some("Array"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "ARRAY_LEADINGCOMMA",
        kind: Some("Array"),
        subkind: Some("LeadingComma"),
        step: Some("ArrayLeadingCommaFixed"),
        label: Some("Array leading comma fixed"),
        category: Some("Array"),
        severity: Some("Warning"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "ARRAY_STRUCTUREMALFORMED",
        kind: Some("Array"),
        subkind: Some("StructureMalformed"),
        step: Some("ArrayStructureCorrected"),
        label: Some("Array structure corrected"),
        category: Some("Array"),
        severity: Some("Error"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "ARRAY_TRAILINGCOMMA",
        kind: Some("Array"),
        subkind: Some("TrailingComma"),
        step: Some("ArrayTrailingCommaFixed"),
        label: Some("Array trailing comma fixed"),
        category: Some("Array"),
        severity: Some("Warning"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "BRACKETS_EXTRA",
        kind: Some("Brackets"),
        subkind: Some("Extra"),
        step: Some("BracketExtraRemoved"),
        label: Some("Bracket extra removed"),
        category: Some("Bracket"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "BRACKETS_MISSING",
        kind: Some("Brackets"),
        subkind: Some("Missing"),
        step: Some("BracketMissingAdded"),
        label: Some("Bracket missing added"),
        category: Some("Bracket"),
        severity: Some("Error"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "BRACKETS_UNBALANCED",
        kind: Some("Brackets"),
        subkind: Some("Unbalanced"),
        step: Some("BracketBalanced"),
        label: Some("Bracket balanced"),
        category: Some("Bracket"),
        severity: Some("Error"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "COLON_MISSING",
        kind: Some("Colon"),
        subkind: Some("Missing"),
        step: Some("ColonMissingFixed"),
        label: Some("Colon missing fixed"),
        category: Some("Colon"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "COLON_MISUSE",
        kind: Some("Colon"),
        subkind: Some("Misuse"),
        step: Some("ColonMisuseFixed"),
        label: Some("Colon misuse fixed"),
        category: Some("Colon"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "COMMA_CHAIN",
        kind: Some("Comma"),
        subkind: Some("Chain"),
        step: Some("CommaChainedValueFixed"),
        label: Some("Comma chained value fixed"),
        category: Some("Comma"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "COMMA_DOUBLE",
        kind: Some("Comma"),
        subkind: Some("Double"),
        step: Some("CommaDoubleRemoved"),
        label: Some("Comma double removed"),
        category: Some("Comma"),
        severity: Some("Warning"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "COMMA_MISALIGNED",
        kind: Some("Comma"),
        subkind: Some("Misaligned"),
        step: Some("CommaMisalignmentFixed"),
        label: Some("Comma misalignment fixed"),
        category: Some("Comma"),
        severity: Some("Warning"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "COMMA_MISSING",
        kind: Some("Comma"),
        subkind: Some("Missing"),
        step: Some("CommaMissingAdded"),
        label: Some("Comma missing added"),
        category: Some("Comma"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "COMMA_ORPHANEDVALUE",
        kind: Some("Comma"),
        subkind: Some("OrphanedValue"),
        step: Some("CommaOrphanedValueFixed"),
        label: Some("Comma orphaned value handled"),
        category: Some("Comma"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "COMMA_STRAY",
        kind: Some("Comma"),
        subkind: Some("Stray"),
        step: Some("CommaStrayRemoved"),
        label: Some("Comma stray removed"),
        category: Some("Comma"),
        severity: Some("Warning"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "ESCAPE_BROKENUNICODE",
        kind: Some("Escape"),
        subkind: Some("BrokenUnicode"),
        step: Some("EscapeUnicodeRepaired"),
        label: Some("Escape unicode repaired"),
        category: Some("Escape"),
        severity: Some("Error"),
        tags: Some(["autofix", "critical"]),
        enabled: Some(true),
    ),
    (
        key: "ESCAPE_INVALID",
        kind: Some("Escape"),
        subkind: Some("Invalid"),
        step: Some("EscapeInvalidRemoved"),
        label: Some("Escape invalid removed"),
        category: Some("Escape"),
        severity: Some("Error"),
        tags: Some(["autofix", "critical"]),
        enabled: Some(true),
    ),
    (
        key: "JS_COMMENT",
        kind: Some("Js"),
        subkind: Some("Comment"),
        step: Some("JSCommentsRemoved"),
        label: Some("JS comments removed"),
        category: Some("JS"),
        severity: Some("Warning"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "JS_NAN",
        kind: Some("Js"),
        subkind: Some("NaN"),
        step: Some("JSNaNReplaced"),
        label: Some("JS NaN replaced"),
        category: Some("JS"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "JS_UNDEFINED",
        kind: Some("Js"),
        subkind: Some("Undefined"),
        step: Some("JSUndefinedReplaced"),
        label: Some("JS undefined replaced"),
        category: Some("JS"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "KEYS_TRAP",
        kind: Some("Keys"),
        subkind: Some("Trap"),
        step: Some("KeyTrapFixed"),
        label: Some("Key trap resolved"),
        category: Some("Key"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "KEYS_UNQUOTED",
        kind: Some("Keys"),
        subkind: Some("Unquoted"),
        step: Some("KeyUnquotedFixed"),
        label: Some("Key unquoted fixed"),
        category: Some("Key"),
        severity: Some("Warning"),
        emotion: Some("Frozen"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "MARKDOWN_JSONEXTRACT",
        kind: Some("Markdown"),
        subkind: Some("JsonExtract"),
        step: Some("MarkdownJsonExtracted"),
        label: Some("Markdown JSON extracted"),
        category: Some("Markdown"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "MARKDOWN_WRAPPER",
        kind: Some("Markdown"),
        subkind: Some("Wrapper"),
        step: Some("MarkdownWrapperRemoved"),
        label: Some("Markdown wrapper removed"),
        category: Some("Markdown"),
        severity: Some("Info"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "MISC_FALLBACK",
        kind: Some("Misc"),
        subkind: Some("Fallback"),
        step: Some("MiscFallbackFixed"),
        label: Some("Misc fallback applied"),
        category: Some("Misc"),
        severity: Some("Warning"),
        tags: Some(["autofix", "fallback", "aggressive"]),
        enabled: Some(true),
    ),
    (
        key: "MISC_NULLSLOTS",
        kind: Some("Misc"),
        subkind: Some("NullSlots"),
        step: Some("MiscNullSlotsFilled"),
        label: Some("Misc null slots filled"),
        category: Some("Misc"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "QUOTE_CURLY",
        kind: Some("Quote"),
        subkind: Some("Curly"),
        step: Some("QuoteCurlyNormalized"),
        label: Some("Quote curly normalized"),
        category: Some("Quote"),
        severity: Some("Info"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "QUOTE_SINGLE",
        kind: Some("Quote"),
        subkind: Some("Single"),
        step: Some("QuoteSingleConverted"),
        label: Some("Quote single converted"),
        category: Some("Quote"),
        severity: Some("Info"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "STRUCTURE_CONCATENATED",
        kind: Some("Structure"),
        subkind: Some("Concatenated"),
        step: Some("StructureConcatenatedSplit"),
        label: Some("Structure concatenated split"),
        category: Some("Structure"),
        severity: Some("Warning"),
        tags: Some(["autofix", "aggressive"]),
        enabled: Some(true),
    ),
    (
        key: "STRUCTURE_ORPHANEDBRACE",
        kind: Some("Structure"),
        subkind: Some("OrphanedBrace"),
        step: Some("StructureOrphanedBraceResolved"),
        label: Some("Structure orphaned brace resolved"),
        category: Some("Structure"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "STRUCTURE_TRUNCATED",
        kind: Some("Structure"),
        subkind: Some("Truncated"),
        step: Some("StructureTruncatedRecovered"),
        label: Some("Structure truncated JSON recovered"),
        category: Some("Structure"),
        severity: Some("Error"),
        tags: Some(["autofix", "critical"]),
        enabled: Some(true),
    ),
    (
        key: "STRUCTURE_UNFINISHEDVALUE",
        kind: Some("Structure"),
        subkind: Some("UnfinishedValue"),
        step: Some("StructureUnfinishedValueFixed"),
        label: Some("Structure unfinished value fixed"),
        category: Some("Structure"),
        severity: Some("Error"),
        tags: Some(["autofix", "critical"]),
        enabled: Some(true),
    ),
    (
        key: "STRUCTURE_REPEATEDKEYS",
        kind: Some("Structure"),
        subkind: Some("RepeatedKeys"),
        step: Some("StructureRepeatedKeysResolved"),
        label: Some("Structure repeated keys resolved"),
        category: Some("Structure"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "STRUCTURE_TOOMANYROOTS",
        kind: Some("Structure"),
        subkind: Some("TooManyRoots"),
        step: Some("StructureTooManyRootsMerged"),
        label: Some("Structure multiple root objects merged"),
        category: Some("Structure"),
        severity: Some("Error"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "COLON_UNPAIREDKEYVALUE",
        kind: Some("Colon"),
        subkind: Some("UnpairedKeyValue"),
        step: Some("ColonUnpairedKeyValueFixed"),
        label: Some("Colon unpaired key-value corrected"),
        category: Some("Colon"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "NUMBER_FLOATNOZERO",
        kind: Some("Number"),
        subkind: Some("FloatNoZero"),
        step: Some("NumberFloatNormalized"),
        label: Some("Number float missing zero fixed"),
        category: Some("Number"),
        severity: Some("Warning"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "NUMBER_TRAILINGDOT",
        kind: Some("Number"),
        subkind: Some("TrailingDot"),
        step: Some("NumberTrailingDotFixed"),
        label: Some("Number with trailing dot corrected"),
        category: Some("Number"),
        severity: Some("Warning"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "QUOTE_UNCLOSEDSTRING",
        kind: Some("Quote"),
        subkind: Some("UnclosedString"),
        step: Some("QuoteUnclosedStringClosed"),
        label: Some("Quote unclosed string fixed"),
        category: Some("Quote"),
        severity: Some("Error"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "ESCAPE_INVALIDSEQUENCE",
        kind: Some("Escape"),
        subkind: Some("InvalidSequence"),
        step: Some("EscapeInvalidSequenceRemoved"),
        label: Some("Escape invalid sequence removed"),
        category: Some("Escape"),
        severity: Some("Error"),
        tags: Some(["autofix", "critical"]),
        enabled: Some(true),
    ),
    (
        key: "QUOTE_BACKTICKEDKEYS",
        kind: Some("Quote"),
        subkind: Some("BacktickedKeys"),
        step: Some("QuoteBackticksNormalized"),
        label: Some("Quote backticked keys normalized"),
        category: Some("Quote"),
        severity: Some("Warning"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "BOOLEAN_STRINGIFIED",
        kind: Some("Boolean"),
        subkind: Some("Stringified"),
        step: Some("BooleanStringUnwrapped"),
        label: Some("Boolean stringified value unwrapped"),
        category: Some("Boolean"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "STRING_UNQUOTED",
        kind: Some("String"),
        subkind: Some("Unquoted"),
        step: Some("StringQuotedProperly"),
        label: Some("String unquoted corrected"),
        category: Some("String"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "NUMBER_NEGATIVEINVALID",
        kind: Some("Number"),
        subkind: Some("NegativeInvalid"),
        step: Some("NumberNegativeCorrected"),
        label: Some("Number invalid negative corrected"),
        category: Some("Number"),
        severity: Some("Warning"),
        tags: Some(["autofix", "structural"]),
        enabled: Some(true),
    ),
    (
        key: "STRUCTURE_JSONBLOCKQUOTE",
        kind: Some("Structure"),
        subkind: Some("JsonBlockQuote"),
        step: Some("StructureJsonBlockQuoteUnwrapped"),
        label: Some("Structure quoted JSON block unwrapped"),
        category: Some("Structure"),
        severity: Some("Warning"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
    (
        key: "STRING_MULTILINE",
        kind: Some("String"),
        subkind: Some("Multiline"),
        step: Some("StringMultilineEscaped"),
        label: Some("String multiline escaped properly"),
        category: Some("String"),
        severity: Some("Warning"),
        tags: Some(["autofix", "cosmetic"]),
        enabled: Some(true),
    ),
]